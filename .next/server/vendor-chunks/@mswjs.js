"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mswjs";
exports.ids = ["vendor-chunks/@mswjs"];
exports.modules = {

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: () => (/* binding */ INTERNAL_REQUEST_ID_HEADER_NAME),\n/* harmony export */   Interceptor: () => (/* binding */ Interceptor),\n/* harmony export */   InterceptorReadyState: () => (/* binding */ InterceptorReadyState),\n/* harmony export */   createRequestId: () => (/* binding */ createRequestId),\n/* harmony export */   deleteGlobalSymbol: () => (/* binding */ deleteGlobalSymbol),\n/* harmony export */   getGlobalSymbol: () => (/* binding */ getGlobalSymbol)\n/* harmony export */ });\n/* harmony import */ var _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @open-draft/logger */ \"(ssr)/./node_modules/@open-draft/logger/lib/index.mjs\");\n/* harmony import */ var strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strict-event-emitter */ \"(ssr)/./node_modules/strict-event-emitter/lib/index.mjs\");\n// src/Interceptor.ts\n\n\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar InterceptorReadyState = /* @__PURE__ */ ((InterceptorReadyState2) => {\n  InterceptorReadyState2[\"INACTIVE\"] = \"INACTIVE\";\n  InterceptorReadyState2[\"APPLYING\"] = \"APPLYING\";\n  InterceptorReadyState2[\"APPLIED\"] = \"APPLIED\";\n  InterceptorReadyState2[\"DISPOSING\"] = \"DISPOSING\";\n  InterceptorReadyState2[\"DISPOSED\"] = \"DISPOSED\";\n  return InterceptorReadyState2;\n})(InterceptorReadyState || {});\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\" /* INACTIVE */;\n    this.emitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    this.subscriptions = [];\n    this.logger = new _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\" /* APPLIED */) {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\" /* APPLYING */;\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\" /* APPLIED */;\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\" /* APPLIED */;\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" /* DISPOSING */ || this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\" /* DISPOSING */;\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\" /* DISPOSED */;\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\n\n// src/createRequestId.ts\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n\n//# sourceMappingURL=chunk-QED3Q6Z2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasConfigurableGlobal: () => (/* binding */ hasConfigurableGlobal)\n/* harmony export */ });\n// src/utils/hasConfigurableGlobal.ts\nfunction hasConfigurableGlobal(propertyName) {\n  const descriptor = Object.getOwnPropertyDescriptor(globalThis, propertyName);\n  if (typeof descriptor === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"function\" && typeof descriptor.get() === \"undefined\") {\n    return false;\n  }\n  if (typeof descriptor.get === \"undefined\" && descriptor.value == null) {\n    return false;\n  }\n  if (typeof descriptor.set === \"undefined\" && !descriptor.configurable) {\n    console.error(\n      `[MSW] Failed to apply interceptor: the global \\`${propertyName}\\` property is non-configurable. This is likely an issue with your environment. If you are using a framework, please open an issue about this in their repository.`\n    );\n    return false;\n  }\n  return true;\n}\n\n\n//# sourceMappingURL=chunk-TX5GBTFY.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvYnJvd3Nlci9jaHVuay1UWDVHQlRGWS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQsYUFBYTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWtvbGFzL25pay9pcXVwL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9icm93c2VyL2NodW5rLVRYNUdCVEZZLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvaGFzQ29uZmlndXJhYmxlR2xvYmFsLnRzXG5mdW5jdGlvbiBoYXNDb25maWd1cmFibGVHbG9iYWwocHJvcGVydHlOYW1lKSB7XG4gIGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGdsb2JhbFRoaXMsIHByb3BlcnR5TmFtZSk7XG4gIGlmICh0eXBlb2YgZGVzY3JpcHRvciA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAodHlwZW9mIGRlc2NyaXB0b3IuZ2V0ID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIGRlc2NyaXB0b3IuZ2V0KCkgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHR5cGVvZiBkZXNjcmlwdG9yLmdldCA9PT0gXCJ1bmRlZmluZWRcIiAmJiBkZXNjcmlwdG9yLnZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgaWYgKHR5cGVvZiBkZXNjcmlwdG9yLnNldCA9PT0gXCJ1bmRlZmluZWRcIiAmJiAhZGVzY3JpcHRvci5jb25maWd1cmFibGUpIHtcbiAgICBjb25zb2xlLmVycm9yKFxuICAgICAgYFtNU1ddIEZhaWxlZCB0byBhcHBseSBpbnRlcmNlcHRvcjogdGhlIGdsb2JhbCBcXGAke3Byb3BlcnR5TmFtZX1cXGAgcHJvcGVydHkgaXMgbm9uLWNvbmZpZ3VyYWJsZS4gVGhpcyBpcyBsaWtlbHkgYW4gaXNzdWUgd2l0aCB5b3VyIGVudmlyb25tZW50LiBJZiB5b3UgYXJlIHVzaW5nIGEgZnJhbWV3b3JrLCBwbGVhc2Ugb3BlbiBhbiBpc3N1ZSBhYm91dCB0aGlzIGluIHRoZWlyIHJlcG9zaXRvcnkuYFxuICAgICk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQge1xuICBoYXNDb25maWd1cmFibGVHbG9iYWxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1UWDVHQlRGWS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/browser/interceptors/WebSocket/index.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/browser/interceptors/WebSocket/index.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelableCloseEvent: () => (/* binding */ CancelableCloseEvent),\n/* harmony export */   CancelableMessageEvent: () => (/* binding */ CancelableMessageEvent),\n/* harmony export */   CloseEvent: () => (/* binding */ CloseEvent),\n/* harmony export */   WebSocketClientConnection: () => (/* binding */ WebSocketClientConnection),\n/* harmony export */   WebSocketClientConnectionProtocol: () => (/* binding */ WebSocketClientConnectionProtocol),\n/* harmony export */   WebSocketInterceptor: () => (/* binding */ WebSocketInterceptor),\n/* harmony export */   WebSocketServerConnection: () => (/* binding */ WebSocketServerConnection),\n/* harmony export */   WebSocketServerConnectionProtocol: () => (/* binding */ WebSocketServerConnectionProtocol)\n/* harmony export */ });\n/* harmony import */ var _chunk_TX5GBTFY_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../chunk-TX5GBTFY.mjs */ \"(ssr)/./node_modules/@mswjs/interceptors/lib/browser/chunk-TX5GBTFY.mjs\");\n/* harmony import */ var _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../chunk-QED3Q6Z2.mjs */ \"(ssr)/./node_modules/@mswjs/interceptors/lib/browser/chunk-QED3Q6Z2.mjs\");\n/* harmony import */ var outvariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! outvariant */ \"(ssr)/./node_modules/outvariant/lib/index.mjs\");\n/* harmony import */ var _open_draft_deferred_promise__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @open-draft/deferred-promise */ \"(ssr)/./node_modules/@open-draft/deferred-promise/build/index.mjs\");\n\n\n\n// src/interceptors/WebSocket/utils/bindEvent.ts\nfunction bindEvent(target, event) {\n  Object.defineProperties(event, {\n    target: {\n      value: target,\n      enumerable: true,\n      writable: true\n    },\n    currentTarget: {\n      value: target,\n      enumerable: true,\n      writable: true\n    }\n  });\n  return event;\n}\n\n// src/interceptors/WebSocket/utils/events.ts\nvar kCancelable = Symbol(\"kCancelable\");\nvar kDefaultPrevented = Symbol(\"kDefaultPrevented\");\nvar CancelableMessageEvent = class extends MessageEvent {\n  constructor(type, init) {\n    super(type, init);\n    this[kCancelable] = !!init.cancelable;\n    this[kDefaultPrevented] = false;\n  }\n  get cancelable() {\n    return this[kCancelable];\n  }\n  set cancelable(nextCancelable) {\n    this[kCancelable] = nextCancelable;\n  }\n  get defaultPrevented() {\n    return this[kDefaultPrevented];\n  }\n  set defaultPrevented(nextDefaultPrevented) {\n    this[kDefaultPrevented] = nextDefaultPrevented;\n  }\n  preventDefault() {\n    if (this.cancelable && !this[kDefaultPrevented]) {\n      this[kDefaultPrevented] = true;\n    }\n  }\n};\nkCancelable, kDefaultPrevented;\nvar CloseEvent = class extends Event {\n  constructor(type, init = {}) {\n    super(type, init);\n    this.code = init.code === void 0 ? 0 : init.code;\n    this.reason = init.reason === void 0 ? \"\" : init.reason;\n    this.wasClean = init.wasClean === void 0 ? false : init.wasClean;\n  }\n};\nvar CancelableCloseEvent = class extends CloseEvent {\n  constructor(type, init = {}) {\n    super(type, init);\n    this[kCancelable] = !!init.cancelable;\n    this[kDefaultPrevented] = false;\n  }\n  get cancelable() {\n    return this[kCancelable];\n  }\n  set cancelable(nextCancelable) {\n    this[kCancelable] = nextCancelable;\n  }\n  get defaultPrevented() {\n    return this[kDefaultPrevented];\n  }\n  set defaultPrevented(nextDefaultPrevented) {\n    this[kDefaultPrevented] = nextDefaultPrevented;\n  }\n  preventDefault() {\n    if (this.cancelable && !this[kDefaultPrevented]) {\n      this[kDefaultPrevented] = true;\n    }\n  }\n};\nkCancelable, kDefaultPrevented;\n\n// src/interceptors/WebSocket/WebSocketClientConnection.ts\nvar kEmitter = Symbol(\"kEmitter\");\nvar kBoundListener = Symbol(\"kBoundListener\");\nvar WebSocketClientConnectionProtocol = class {\n};\nvar WebSocketClientConnection = class {\n  constructor(socket, transport) {\n    this.socket = socket;\n    this.transport = transport;\n    this.id = (0,_chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_1__.createRequestId)();\n    this.url = new URL(socket.url);\n    this[kEmitter] = new EventTarget();\n    this.transport.addEventListener(\"outgoing\", (event) => {\n      const message = bindEvent(\n        this.socket,\n        new CancelableMessageEvent(\"message\", {\n          data: event.data,\n          origin: event.origin,\n          cancelable: true\n        })\n      );\n      this[kEmitter].dispatchEvent(message);\n      if (message.defaultPrevented) {\n        event.preventDefault();\n      }\n    });\n    this.transport.addEventListener(\"close\", (event) => {\n      this[kEmitter].dispatchEvent(\n        bindEvent(this.socket, new CloseEvent(\"close\", event))\n      );\n    });\n  }\n  /**\n   * Listen for the outgoing events from the connected WebSocket client.\n   */\n  addEventListener(type, listener, options) {\n    if (!Reflect.has(listener, kBoundListener)) {\n      const boundListener = listener.bind(this.socket);\n      Object.defineProperty(listener, kBoundListener, {\n        value: boundListener,\n        enumerable: false,\n        configurable: false\n      });\n    }\n    this[kEmitter].addEventListener(\n      type,\n      Reflect.get(listener, kBoundListener),\n      options\n    );\n  }\n  /**\n   * Removes the listener for the given event.\n   */\n  removeEventListener(event, listener, options) {\n    this[kEmitter].removeEventListener(\n      event,\n      Reflect.get(listener, kBoundListener),\n      options\n    );\n  }\n  /**\n   * Send data to the connected client.\n   */\n  send(data) {\n    this.transport.send(data);\n  }\n  /**\n   * Close the WebSocket connection.\n   * @param {number} code A status code (see https://www.rfc-editor.org/rfc/rfc6455#section-7.4.1).\n   * @param {string} reason A custom connection close reason.\n   */\n  close(code, reason) {\n    this.transport.close(code, reason);\n  }\n};\nkEmitter;\n\n// src/interceptors/WebSocket/WebSocketServerConnection.ts\n\n\n// src/interceptors/WebSocket/WebSocketOverride.ts\n\n\nvar WEBSOCKET_CLOSE_CODE_RANGE_ERROR = \"InvalidAccessError: close code out of user configurable range\";\nvar kPassthroughPromise = Symbol(\"kPassthroughPromise\");\nvar kOnSend = Symbol(\"kOnSend\");\nvar kClose = Symbol(\"kClose\");\nvar WebSocketOverride = class extends EventTarget {\n  constructor(url, protocols) {\n    super();\n    this.CONNECTING = 0;\n    this.OPEN = 1;\n    this.CLOSING = 2;\n    this.CLOSED = 3;\n    this._onopen = null;\n    this._onmessage = null;\n    this._onerror = null;\n    this._onclose = null;\n    this.url = url.toString();\n    this.protocol = \"\";\n    this.extensions = \"\";\n    this.binaryType = \"blob\";\n    this.readyState = this.CONNECTING;\n    this.bufferedAmount = 0;\n    this[kPassthroughPromise] = new _open_draft_deferred_promise__WEBPACK_IMPORTED_MODULE_3__.DeferredPromise();\n    queueMicrotask(async () => {\n      if (await this[kPassthroughPromise]) {\n        return;\n      }\n      this.protocol = typeof protocols === \"string\" ? protocols : Array.isArray(protocols) && protocols.length > 0 ? protocols[0] : \"\";\n      if (this.readyState === this.CONNECTING) {\n        this.readyState = this.OPEN;\n        this.dispatchEvent(bindEvent(this, new Event(\"open\")));\n      }\n    });\n  }\n  set onopen(listener) {\n    this.removeEventListener(\"open\", this._onopen);\n    this._onopen = listener;\n    if (listener !== null) {\n      this.addEventListener(\"open\", listener);\n    }\n  }\n  get onopen() {\n    return this._onopen;\n  }\n  set onmessage(listener) {\n    this.removeEventListener(\n      \"message\",\n      this._onmessage\n    );\n    this._onmessage = listener;\n    if (listener !== null) {\n      this.addEventListener(\"message\", listener);\n    }\n  }\n  get onmessage() {\n    return this._onmessage;\n  }\n  set onerror(listener) {\n    this.removeEventListener(\"error\", this._onerror);\n    this._onerror = listener;\n    if (listener !== null) {\n      this.addEventListener(\"error\", listener);\n    }\n  }\n  get onerror() {\n    return this._onerror;\n  }\n  set onclose(listener) {\n    this.removeEventListener(\"close\", this._onclose);\n    this._onclose = listener;\n    if (listener !== null) {\n      this.addEventListener(\"close\", listener);\n    }\n  }\n  get onclose() {\n    return this._onclose;\n  }\n  /**\n   * @see https://websockets.spec.whatwg.org/#ref-for-dom-websocket-send%E2%91%A0\n   */\n  send(data) {\n    if (this.readyState === this.CONNECTING) {\n      this.close();\n      throw new DOMException(\"InvalidStateError\");\n    }\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n    this.bufferedAmount += getDataSize(data);\n    queueMicrotask(() => {\n      var _a;\n      this.bufferedAmount = 0;\n      (_a = this[kOnSend]) == null ? void 0 : _a.call(this, data);\n    });\n  }\n  close(code = 1e3, reason) {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(code, WEBSOCKET_CLOSE_CODE_RANGE_ERROR);\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      code === 1e3 || code >= 3e3 && code <= 4999,\n      WEBSOCKET_CLOSE_CODE_RANGE_ERROR\n    );\n    this[kClose](code, reason);\n  }\n  [(kPassthroughPromise, kOnSend, kClose)](code = 1e3, reason, wasClean = true) {\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return;\n    }\n    this.readyState = this.CLOSING;\n    queueMicrotask(() => {\n      this.readyState = this.CLOSED;\n      this.dispatchEvent(\n        bindEvent(\n          this,\n          new CloseEvent(\"close\", {\n            code,\n            reason,\n            wasClean\n          })\n        )\n      );\n      this._onopen = null;\n      this._onmessage = null;\n      this._onerror = null;\n      this._onclose = null;\n    });\n  }\n  addEventListener(type, listener, options) {\n    return super.addEventListener(\n      type,\n      listener,\n      options\n    );\n  }\n  removeEventListener(type, callback, options) {\n    return super.removeEventListener(type, callback, options);\n  }\n};\nWebSocketOverride.CONNECTING = 0;\nWebSocketOverride.OPEN = 1;\nWebSocketOverride.CLOSING = 2;\nWebSocketOverride.CLOSED = 3;\nfunction getDataSize(data) {\n  if (typeof data === \"string\") {\n    return data.length;\n  }\n  if (data instanceof Blob) {\n    return data.size;\n  }\n  return data.byteLength;\n}\n\n// src/interceptors/WebSocket/WebSocketServerConnection.ts\nvar kEmitter2 = Symbol(\"kEmitter\");\nvar kBoundListener2 = Symbol(\"kBoundListener\");\nvar kSend = Symbol(\"kSend\");\nvar WebSocketServerConnectionProtocol = class {\n};\nvar WebSocketServerConnection = class {\n  constructor(client, transport, createConnection) {\n    this.client = client;\n    this.transport = transport;\n    this.createConnection = createConnection;\n    this[kEmitter2] = new EventTarget();\n    this.mockCloseController = new AbortController();\n    this.realCloseController = new AbortController();\n    this.transport.addEventListener(\"outgoing\", (event) => {\n      if (typeof this.realWebSocket === \"undefined\") {\n        return;\n      }\n      queueMicrotask(() => {\n        if (!event.defaultPrevented) {\n          this[kSend](event.data);\n        }\n      });\n    });\n    this.transport.addEventListener(\n      \"incoming\",\n      this.handleIncomingMessage.bind(this)\n    );\n  }\n  /**\n   * The `WebSocket` instance connected to the original server.\n   * Accessing this before calling `server.connect()` will throw.\n   */\n  get socket() {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      this.realWebSocket,\n      'Cannot access \"socket\" on the original WebSocket server object: the connection is not open. Did you forget to call `server.connect()`?'\n    );\n    return this.realWebSocket;\n  }\n  /**\n   * Open connection to the original WebSocket server.\n   */\n  connect() {\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      !this.realWebSocket || this.realWebSocket.readyState !== WebSocket.OPEN,\n      'Failed to call \"connect()\" on the original WebSocket instance: the connection already open'\n    );\n    const realWebSocket = this.createConnection();\n    realWebSocket.binaryType = this.client.binaryType;\n    realWebSocket.addEventListener(\n      \"open\",\n      (event) => {\n        this[kEmitter2].dispatchEvent(\n          bindEvent(this.realWebSocket, new Event(\"open\", event))\n        );\n      },\n      { once: true }\n    );\n    realWebSocket.addEventListener(\"message\", (event) => {\n      this.transport.dispatchEvent(\n        bindEvent(\n          this.realWebSocket,\n          new MessageEvent(\"incoming\", {\n            data: event.data,\n            origin: event.origin\n          })\n        )\n      );\n    });\n    this.client.addEventListener(\n      \"close\",\n      (event) => {\n        this.handleMockClose(event);\n      },\n      {\n        signal: this.mockCloseController.signal\n      }\n    );\n    realWebSocket.addEventListener(\n      \"close\",\n      (event) => {\n        this.handleRealClose(event);\n      },\n      {\n        signal: this.realCloseController.signal\n      }\n    );\n    realWebSocket.addEventListener(\"error\", () => {\n      const errorEvent = bindEvent(\n        realWebSocket,\n        new Event(\"error\", { cancelable: true })\n      );\n      this[kEmitter2].dispatchEvent(errorEvent);\n      if (!errorEvent.defaultPrevented) {\n        this.client.dispatchEvent(bindEvent(this.client, new Event(\"error\")));\n      }\n    });\n    this.realWebSocket = realWebSocket;\n  }\n  /**\n   * Listen for the incoming events from the original WebSocket server.\n   */\n  addEventListener(event, listener, options) {\n    if (!Reflect.has(listener, kBoundListener2)) {\n      const boundListener = listener.bind(this.client);\n      Object.defineProperty(listener, kBoundListener2, {\n        value: boundListener,\n        enumerable: false\n      });\n    }\n    this[kEmitter2].addEventListener(\n      event,\n      Reflect.get(listener, kBoundListener2),\n      options\n    );\n  }\n  /**\n   * Remove the listener for the given event.\n   */\n  removeEventListener(event, listener, options) {\n    this[kEmitter2].removeEventListener(\n      event,\n      Reflect.get(listener, kBoundListener2),\n      options\n    );\n  }\n  /**\n   * Send data to the original WebSocket server.\n   * @example\n   * server.send('hello')\n   * server.send(new Blob(['hello']))\n   * server.send(new TextEncoder().encode('hello'))\n   */\n  send(data) {\n    this[kSend](data);\n  }\n  [(kEmitter2, kSend)](data) {\n    const { realWebSocket } = this;\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      realWebSocket,\n      'Failed to call \"server.send()\" for \"%s\": the connection is not open. Did you forget to call \"server.connect()\"?',\n      this.client.url\n    );\n    if (realWebSocket.readyState === WebSocket.CLOSING || realWebSocket.readyState === WebSocket.CLOSED) {\n      return;\n    }\n    if (realWebSocket.readyState === WebSocket.CONNECTING) {\n      realWebSocket.addEventListener(\n        \"open\",\n        () => {\n          realWebSocket.send(data);\n        },\n        { once: true }\n      );\n      return;\n    }\n    realWebSocket.send(data);\n  }\n  /**\n   * Close the actual server connection.\n   */\n  close() {\n    const { realWebSocket } = this;\n    (0,outvariant__WEBPACK_IMPORTED_MODULE_2__.invariant)(\n      realWebSocket,\n      'Failed to close server connection for \"%s\": the connection is not open. Did you forget to call \"server.connect()\"?',\n      this.client.url\n    );\n    this.realCloseController.abort();\n    if (realWebSocket.readyState === WebSocket.CLOSING || realWebSocket.readyState === WebSocket.CLOSED) {\n      return;\n    }\n    realWebSocket.close();\n    queueMicrotask(() => {\n      this[kEmitter2].dispatchEvent(\n        bindEvent(\n          this.realWebSocket,\n          new CancelableCloseEvent(\"close\", {\n            /**\n             * @note `server.close()` in the interceptor\n             * always results in clean closures.\n             */\n            code: 1e3,\n            cancelable: true\n          })\n        )\n      );\n    });\n  }\n  handleIncomingMessage(event) {\n    const messageEvent = bindEvent(\n      event.target,\n      new CancelableMessageEvent(\"message\", {\n        data: event.data,\n        origin: event.origin,\n        cancelable: true\n      })\n    );\n    this[kEmitter2].dispatchEvent(messageEvent);\n    if (!messageEvent.defaultPrevented) {\n      this.client.dispatchEvent(\n        bindEvent(\n          /**\n           * @note Bind the forwarded original server events\n           * to the mock WebSocket instance so it would\n           * dispatch them straight away.\n           */\n          this.client,\n          // Clone the message event again to prevent\n          // the \"already being dispatched\" exception.\n          new MessageEvent(\"message\", {\n            data: event.data,\n            origin: event.origin\n          })\n        )\n      );\n    }\n  }\n  handleMockClose(_event) {\n    if (this.realWebSocket) {\n      this.realWebSocket.close();\n    }\n  }\n  handleRealClose(event) {\n    this.mockCloseController.abort();\n    const closeEvent = bindEvent(\n      this.realWebSocket,\n      new CancelableCloseEvent(\"close\", {\n        code: event.code,\n        reason: event.reason,\n        wasClean: event.wasClean,\n        cancelable: true\n      })\n    );\n    this[kEmitter2].dispatchEvent(closeEvent);\n    if (!closeEvent.defaultPrevented) {\n      this.client[kClose](event.code, event.reason);\n    }\n  }\n};\n\n// src/interceptors/WebSocket/WebSocketClassTransport.ts\nvar WebSocketClassTransport = class extends EventTarget {\n  constructor(socket) {\n    super();\n    this.socket = socket;\n    this.socket.addEventListener(\"close\", (event) => {\n      this.dispatchEvent(bindEvent(this.socket, new CloseEvent(\"close\", event)));\n    });\n    this.socket[kOnSend] = (data) => {\n      this.dispatchEvent(\n        bindEvent(\n          this.socket,\n          // Dispatch this as cancelable because \"client\" connection\n          // re-creates this message event (cannot dispatch the same event).\n          new CancelableMessageEvent(\"outgoing\", {\n            data,\n            origin: this.socket.url,\n            cancelable: true\n          })\n        )\n      );\n    };\n  }\n  addEventListener(type, callback, options) {\n    return super.addEventListener(type, callback, options);\n  }\n  dispatchEvent(event) {\n    return super.dispatchEvent(event);\n  }\n  send(data) {\n    queueMicrotask(() => {\n      if (this.socket.readyState === this.socket.CLOSING || this.socket.readyState === this.socket.CLOSED) {\n        return;\n      }\n      const dispatchEvent = () => {\n        this.socket.dispatchEvent(\n          bindEvent(\n            /**\n             * @note Setting this event's \"target\" to the\n             * WebSocket override instance is important.\n             * This way it can tell apart original incoming events\n             * (must be forwarded to the transport) from the\n             * mocked message events like the one below\n             * (must be dispatched on the client instance).\n             */\n            this.socket,\n            new MessageEvent(\"message\", {\n              data,\n              origin: this.socket.url\n            })\n          )\n        );\n      };\n      if (this.socket.readyState === this.socket.CONNECTING) {\n        this.socket.addEventListener(\n          \"open\",\n          () => {\n            dispatchEvent();\n          },\n          { once: true }\n        );\n      } else {\n        dispatchEvent();\n      }\n    });\n  }\n  close(code, reason) {\n    this.socket[kClose](code, reason);\n  }\n};\n\n// src/interceptors/WebSocket/index.ts\nvar _WebSocketInterceptor = class extends _chunk_QED3Q6Z2_mjs__WEBPACK_IMPORTED_MODULE_1__.Interceptor {\n  constructor() {\n    super(_WebSocketInterceptor.symbol);\n  }\n  checkEnvironment() {\n    return (0,_chunk_TX5GBTFY_mjs__WEBPACK_IMPORTED_MODULE_0__.hasConfigurableGlobal)(\"WebSocket\");\n  }\n  setup() {\n    const originalWebSocketDescriptor = Object.getOwnPropertyDescriptor(\n      globalThis,\n      \"WebSocket\"\n    );\n    const WebSocketProxy = new Proxy(globalThis.WebSocket, {\n      construct: (target, args, newTarget) => {\n        const [url, protocols] = args;\n        const createConnection = () => {\n          return Reflect.construct(target, args, newTarget);\n        };\n        const socket = new WebSocketOverride(url, protocols);\n        const transport = new WebSocketClassTransport(socket);\n        queueMicrotask(() => {\n          try {\n            const server = new WebSocketServerConnection(\n              socket,\n              transport,\n              createConnection\n            );\n            const hasConnectionListeners = this.emitter.emit(\"connection\", {\n              client: new WebSocketClientConnection(socket, transport),\n              server,\n              info: {\n                protocols\n              }\n            });\n            if (hasConnectionListeners) {\n              socket[kPassthroughPromise].resolve(false);\n            } else {\n              socket[kPassthroughPromise].resolve(true);\n              server.connect();\n              server.addEventListener(\"open\", () => {\n                socket.dispatchEvent(bindEvent(socket, new Event(\"open\")));\n                if (server[\"realWebSocket\"]) {\n                  socket.protocol = server[\"realWebSocket\"].protocol;\n                }\n              });\n            }\n          } catch (error) {\n            if (error instanceof Error) {\n              socket.dispatchEvent(new Event(\"error\"));\n              if (socket.readyState !== WebSocket.CLOSING && socket.readyState !== WebSocket.CLOSED) {\n                socket[kClose](1011, error.message, false);\n              }\n              console.error(error);\n            }\n          }\n        });\n        return socket;\n      }\n    });\n    Object.defineProperty(globalThis, \"WebSocket\", {\n      value: WebSocketProxy,\n      configurable: true\n    });\n    this.subscriptions.push(() => {\n      Object.defineProperty(\n        globalThis,\n        \"WebSocket\",\n        originalWebSocketDescriptor\n      );\n    });\n  }\n};\nvar WebSocketInterceptor = _WebSocketInterceptor;\nWebSocketInterceptor.symbol = Symbol(\"websocket\");\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/browser/interceptors/WebSocket/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-3GJB4JDF.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/node/chunk-3GJB4JDF.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRawRequest: () => (/* binding */ getRawRequest),\n/* harmony export */   setRawRequest: () => (/* binding */ setRawRequest)\n/* harmony export */ });\n// src/getRawRequest.ts\nvar kRawRequest = Symbol(\"kRawRequest\");\nfunction getRawRequest(request) {\n  return Reflect.get(request, kRawRequest);\n}\nfunction setRawRequest(request, rawRequest) {\n  Reflect.set(request, kRawRequest, rawRequest);\n}\n\n\n//# sourceMappingURL=chunk-3GJB4JDF.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvbm9kZS9jaHVuay0zR0pCNEpERi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWtvbGFzL25pay9pcXVwL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9ub2RlL2NodW5rLTNHSkI0SkRGLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvZ2V0UmF3UmVxdWVzdC50c1xudmFyIGtSYXdSZXF1ZXN0ID0gU3ltYm9sKFwia1Jhd1JlcXVlc3RcIik7XG5mdW5jdGlvbiBnZXRSYXdSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgcmV0dXJuIFJlZmxlY3QuZ2V0KHJlcXVlc3QsIGtSYXdSZXF1ZXN0KTtcbn1cbmZ1bmN0aW9uIHNldFJhd1JlcXVlc3QocmVxdWVzdCwgcmF3UmVxdWVzdCkge1xuICBSZWZsZWN0LnNldChyZXF1ZXN0LCBrUmF3UmVxdWVzdCwgcmF3UmVxdWVzdCk7XG59XG5cbmV4cG9ydCB7XG4gIGdldFJhd1JlcXVlc3QsXG4gIHNldFJhd1JlcXVlc3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay0zR0pCNEpERi5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-3GJB4JDF.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-6HYIRFX2.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/node/chunk-6HYIRFX2.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeBuffer: () => (/* binding */ decodeBuffer),\n/* harmony export */   encodeBuffer: () => (/* binding */ encodeBuffer),\n/* harmony export */   toArrayBuffer: () => (/* binding */ toArrayBuffer)\n/* harmony export */ });\n// src/utils/bufferUtils.ts\nvar encoder = new TextEncoder();\nfunction encodeBuffer(text) {\n  return encoder.encode(text);\n}\nfunction decodeBuffer(buffer, encoding) {\n  const decoder = new TextDecoder(encoding);\n  return decoder.decode(buffer);\n}\nfunction toArrayBuffer(array) {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  );\n}\n\n\n//# sourceMappingURL=chunk-6HYIRFX2.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvbm9kZS9jaHVuay02SFlJUkZYMi5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWtvbGFzL25pay9pcXVwL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9ub2RlL2NodW5rLTZIWUlSRlgyLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvYnVmZmVyVXRpbHMudHNcbnZhciBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKCk7XG5mdW5jdGlvbiBlbmNvZGVCdWZmZXIodGV4dCkge1xuICByZXR1cm4gZW5jb2Rlci5lbmNvZGUodGV4dCk7XG59XG5mdW5jdGlvbiBkZWNvZGVCdWZmZXIoYnVmZmVyLCBlbmNvZGluZykge1xuICBjb25zdCBkZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKGVuY29kaW5nKTtcbiAgcmV0dXJuIGRlY29kZXIuZGVjb2RlKGJ1ZmZlcik7XG59XG5mdW5jdGlvbiB0b0FycmF5QnVmZmVyKGFycmF5KSB7XG4gIHJldHVybiBhcnJheS5idWZmZXIuc2xpY2UoXG4gICAgYXJyYXkuYnl0ZU9mZnNldCxcbiAgICBhcnJheS5ieXRlT2Zmc2V0ICsgYXJyYXkuYnl0ZUxlbmd0aFxuICApO1xufVxuXG5leHBvcnQge1xuICBlbmNvZGVCdWZmZXIsXG4gIGRlY29kZUJ1ZmZlcixcbiAgdG9BcnJheUJ1ZmZlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTZIWUlSRlgyLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-6HYIRFX2.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-6YM4PLBI.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/node/chunk-6YM4PLBI.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IS_PATCHED_MODULE: () => (/* binding */ IS_PATCHED_MODULE)\n/* harmony export */ });\n// src/glossary.ts\nvar IS_PATCHED_MODULE = Symbol(\"isPatchedModule\");\n\n\n//# sourceMappingURL=chunk-6YM4PLBI.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvbm9kZS9jaHVuay02WU00UExCSS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7O0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL25pa29sYXMvbmlrL2lxdXAvbm9kZV9tb2R1bGVzL0Btc3dqcy9pbnRlcmNlcHRvcnMvbGliL25vZGUvY2h1bmstNllNNFBMQkkubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9nbG9zc2FyeS50c1xudmFyIElTX1BBVENIRURfTU9EVUxFID0gU3ltYm9sKFwiaXNQYXRjaGVkTW9kdWxlXCIpO1xuXG5leHBvcnQge1xuICBJU19QQVRDSEVEX01PRFVMRVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLTZZTTRQTEJJLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-6YM4PLBI.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-IHJSPMYM.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/node/chunk-IHJSPMYM.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchResponse: () => (/* binding */ FetchResponse),\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: () => (/* binding */ INTERNAL_REQUEST_ID_HEADER_NAME),\n/* harmony export */   Interceptor: () => (/* binding */ Interceptor),\n/* harmony export */   InterceptorReadyState: () => (/* binding */ InterceptorReadyState),\n/* harmony export */   canParseUrl: () => (/* binding */ canParseUrl),\n/* harmony export */   createRequestId: () => (/* binding */ createRequestId),\n/* harmony export */   deleteGlobalSymbol: () => (/* binding */ deleteGlobalSymbol),\n/* harmony export */   getGlobalSymbol: () => (/* binding */ getGlobalSymbol)\n/* harmony export */ });\n/* harmony import */ var _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @open-draft/logger */ \"(ssr)/./node_modules/@open-draft/logger/lib/index.mjs\");\n/* harmony import */ var strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! strict-event-emitter */ \"(ssr)/./node_modules/strict-event-emitter/lib/index.mjs\");\n// src/Interceptor.ts\n\n\nvar INTERNAL_REQUEST_ID_HEADER_NAME = \"x-interceptors-internal-request-id\";\nfunction getGlobalSymbol(symbol) {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || void 0\n  );\n}\nfunction setGlobalSymbol(symbol, value) {\n  globalThis[symbol] = value;\n}\nfunction deleteGlobalSymbol(symbol) {\n  delete globalThis[symbol];\n}\nvar InterceptorReadyState = /* @__PURE__ */ ((InterceptorReadyState2) => {\n  InterceptorReadyState2[\"INACTIVE\"] = \"INACTIVE\";\n  InterceptorReadyState2[\"APPLYING\"] = \"APPLYING\";\n  InterceptorReadyState2[\"APPLIED\"] = \"APPLIED\";\n  InterceptorReadyState2[\"DISPOSING\"] = \"DISPOSING\";\n  InterceptorReadyState2[\"DISPOSED\"] = \"DISPOSED\";\n  return InterceptorReadyState2;\n})(InterceptorReadyState || {});\nvar Interceptor = class {\n  constructor(symbol) {\n    this.symbol = symbol;\n    this.readyState = \"INACTIVE\" /* INACTIVE */;\n    this.emitter = new strict_event_emitter__WEBPACK_IMPORTED_MODULE_1__.Emitter();\n    this.subscriptions = [];\n    this.logger = new _open_draft_logger__WEBPACK_IMPORTED_MODULE_0__.Logger(symbol.description);\n    this.emitter.setMaxListeners(0);\n    this.logger.info(\"constructing the interceptor...\");\n  }\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  checkEnvironment() {\n    return true;\n  }\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  apply() {\n    const logger = this.logger.extend(\"apply\");\n    logger.info(\"applying the interceptor...\");\n    if (this.readyState === \"APPLIED\" /* APPLIED */) {\n      logger.info(\"intercepted already applied!\");\n      return;\n    }\n    const shouldApply = this.checkEnvironment();\n    if (!shouldApply) {\n      logger.info(\"the interceptor cannot be applied in this environment!\");\n      return;\n    }\n    this.readyState = \"APPLYING\" /* APPLYING */;\n    const runningInstance = this.getInstance();\n    if (runningInstance) {\n      logger.info(\"found a running instance, reusing...\");\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event);\n        runningInstance.emitter.addListener(event, listener);\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener);\n          logger.info('removed proxied \"%s\" listener!', event);\n        });\n        return this;\n      };\n      this.readyState = \"APPLIED\" /* APPLIED */;\n      return;\n    }\n    logger.info(\"no running instance found, setting up a new instance...\");\n    this.setup();\n    this.setInstance();\n    this.readyState = \"APPLIED\" /* APPLIED */;\n  }\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  setup() {\n  }\n  /**\n   * Listen to the interceptor's public events.\n   */\n  on(event, listener) {\n    const logger = this.logger.extend(\"on\");\n    if (this.readyState === \"DISPOSING\" /* DISPOSING */ || this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot listen to events, already disposed!\");\n      return this;\n    }\n    logger.info('adding \"%s\" event listener:', event, listener);\n    this.emitter.on(event, listener);\n    return this;\n  }\n  once(event, listener) {\n    this.emitter.once(event, listener);\n    return this;\n  }\n  off(event, listener) {\n    this.emitter.off(event, listener);\n    return this;\n  }\n  removeAllListeners(event) {\n    this.emitter.removeAllListeners(event);\n    return this;\n  }\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  dispose() {\n    const logger = this.logger.extend(\"dispose\");\n    if (this.readyState === \"DISPOSED\" /* DISPOSED */) {\n      logger.info(\"cannot dispose, already disposed!\");\n      return;\n    }\n    logger.info(\"disposing the interceptor...\");\n    this.readyState = \"DISPOSING\" /* DISPOSING */;\n    if (!this.getInstance()) {\n      logger.info(\"no interceptors running, skipping dispose...\");\n      return;\n    }\n    this.clearInstance();\n    logger.info(\"global symbol deleted:\", getGlobalSymbol(this.symbol));\n    if (this.subscriptions.length > 0) {\n      logger.info(\"disposing of %d subscriptions...\", this.subscriptions.length);\n      for (const dispose of this.subscriptions) {\n        dispose();\n      }\n      this.subscriptions = [];\n      logger.info(\"disposed of all subscriptions!\", this.subscriptions.length);\n    }\n    this.emitter.removeAllListeners();\n    logger.info(\"destroyed the listener!\");\n    this.readyState = \"DISPOSED\" /* DISPOSED */;\n  }\n  getInstance() {\n    var _a;\n    const instance = getGlobalSymbol(this.symbol);\n    this.logger.info(\"retrieved global instance:\", (_a = instance == null ? void 0 : instance.constructor) == null ? void 0 : _a.name);\n    return instance;\n  }\n  setInstance() {\n    setGlobalSymbol(this.symbol, this);\n    this.logger.info(\"set global instance!\", this.symbol.description);\n  }\n  clearInstance() {\n    deleteGlobalSymbol(this.symbol);\n    this.logger.info(\"cleared global instance!\", this.symbol.description);\n  }\n};\n\n// src/createRequestId.ts\nfunction createRequestId() {\n  return Math.random().toString(16).slice(2);\n}\n\n// src/utils/canParseUrl.ts\nfunction canParseUrl(url) {\n  try {\n    new URL(url);\n    return true;\n  } catch (_error) {\n    return false;\n  }\n}\n\n// src/utils/getValueBySymbol.ts\nfunction getValueBySymbol(symbolName, source) {\n  const ownSymbols = Object.getOwnPropertySymbols(source);\n  const symbol = ownSymbols.find((symbol2) => {\n    return symbol2.description === symbolName;\n  });\n  if (symbol) {\n    return Reflect.get(source, symbol);\n  }\n  return;\n}\n\n// src/utils/fetchUtils.ts\nvar _FetchResponse = class extends Response {\n  static isConfigurableStatusCode(status) {\n    return status >= 200 && status <= 599;\n  }\n  static isRedirectResponse(status) {\n    return _FetchResponse.STATUS_CODES_WITH_REDIRECT.includes(status);\n  }\n  /**\n   * Returns a boolean indicating whether the given response status\n   * code represents a response that can have a body.\n   */\n  static isResponseWithBody(status) {\n    return !_FetchResponse.STATUS_CODES_WITHOUT_BODY.includes(status);\n  }\n  static setUrl(url, response) {\n    if (!url || url === \"about:\" || !canParseUrl(url)) {\n      return;\n    }\n    const state = getValueBySymbol(\"state\", response);\n    if (state) {\n      state.urlList.push(new URL(url));\n    } else {\n      Object.defineProperty(response, \"url\", {\n        value: url,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      });\n    }\n  }\n  /**\n   * Parses the given raw HTTP headers into a Fetch API `Headers` instance.\n   */\n  static parseRawHeaders(rawHeaders) {\n    const headers = new Headers();\n    for (let line = 0; line < rawHeaders.length; line += 2) {\n      headers.append(rawHeaders[line], rawHeaders[line + 1]);\n    }\n    return headers;\n  }\n  constructor(body, init = {}) {\n    var _a;\n    const status = (_a = init.status) != null ? _a : 200;\n    const safeStatus = _FetchResponse.isConfigurableStatusCode(status) ? status : 200;\n    const finalBody = _FetchResponse.isResponseWithBody(status) ? body : null;\n    super(finalBody, {\n      status: safeStatus,\n      statusText: init.statusText,\n      headers: init.headers\n    });\n    if (status !== safeStatus) {\n      const state = getValueBySymbol(\"state\", this);\n      if (state) {\n        state.status = status;\n      } else {\n        Object.defineProperty(this, \"status\", {\n          value: status,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n      }\n    }\n    _FetchResponse.setUrl(init.url, this);\n  }\n};\nvar FetchResponse = _FetchResponse;\n/**\n * Response status codes for responses that cannot have body.\n * @see https://fetch.spec.whatwg.org/#statuses\n */\nFetchResponse.STATUS_CODES_WITHOUT_BODY = [101, 103, 204, 205, 304];\nFetchResponse.STATUS_CODES_WITH_REDIRECT = [301, 302, 303, 307, 308];\n\n\n//# sourceMappingURL=chunk-IHJSPMYM.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvbm9kZS9jaHVuay1JSEpTUE1ZTS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQzRDO0FBQ0c7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNkJBQTZCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHlEQUFPO0FBQzlCO0FBQ0Esc0JBQXNCLHNEQUFNO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDBCQUEwQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQVdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWtvbGFzL25pay9pcXVwL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9ub2RlL2NodW5rLUlISlNQTVlNLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvSW50ZXJjZXB0b3IudHNcbmltcG9ydCB7IExvZ2dlciB9IGZyb20gXCJAb3Blbi1kcmFmdC9sb2dnZXJcIjtcbmltcG9ydCB7IEVtaXR0ZXIgfSBmcm9tIFwic3RyaWN0LWV2ZW50LWVtaXR0ZXJcIjtcbnZhciBJTlRFUk5BTF9SRVFVRVNUX0lEX0hFQURFUl9OQU1FID0gXCJ4LWludGVyY2VwdG9ycy1pbnRlcm5hbC1yZXF1ZXN0LWlkXCI7XG5mdW5jdGlvbiBnZXRHbG9iYWxTeW1ib2woc3ltYm9sKSB7XG4gIHJldHVybiAoXG4gICAgLy8gQHRzLWlnbm9yZSBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1R5cGVTY3JpcHQvaXNzdWVzLzI0NTg3XG4gICAgZ2xvYmFsVGhpc1tzeW1ib2xdIHx8IHZvaWQgMFxuICApO1xufVxuZnVuY3Rpb24gc2V0R2xvYmFsU3ltYm9sKHN5bWJvbCwgdmFsdWUpIHtcbiAgZ2xvYmFsVGhpc1tzeW1ib2xdID0gdmFsdWU7XG59XG5mdW5jdGlvbiBkZWxldGVHbG9iYWxTeW1ib2woc3ltYm9sKSB7XG4gIGRlbGV0ZSBnbG9iYWxUaGlzW3N5bWJvbF07XG59XG52YXIgSW50ZXJjZXB0b3JSZWFkeVN0YXRlID0gLyogQF9fUFVSRV9fICovICgoSW50ZXJjZXB0b3JSZWFkeVN0YXRlMikgPT4ge1xuICBJbnRlcmNlcHRvclJlYWR5U3RhdGUyW1wiSU5BQ1RJVkVcIl0gPSBcIklOQUNUSVZFXCI7XG4gIEludGVyY2VwdG9yUmVhZHlTdGF0ZTJbXCJBUFBMWUlOR1wiXSA9IFwiQVBQTFlJTkdcIjtcbiAgSW50ZXJjZXB0b3JSZWFkeVN0YXRlMltcIkFQUExJRURcIl0gPSBcIkFQUExJRURcIjtcbiAgSW50ZXJjZXB0b3JSZWFkeVN0YXRlMltcIkRJU1BPU0lOR1wiXSA9IFwiRElTUE9TSU5HXCI7XG4gIEludGVyY2VwdG9yUmVhZHlTdGF0ZTJbXCJESVNQT1NFRFwiXSA9IFwiRElTUE9TRURcIjtcbiAgcmV0dXJuIEludGVyY2VwdG9yUmVhZHlTdGF0ZTI7XG59KShJbnRlcmNlcHRvclJlYWR5U3RhdGUgfHwge30pO1xudmFyIEludGVyY2VwdG9yID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihzeW1ib2wpIHtcbiAgICB0aGlzLnN5bWJvbCA9IHN5bWJvbDtcbiAgICB0aGlzLnJlYWR5U3RhdGUgPSBcIklOQUNUSVZFXCIgLyogSU5BQ1RJVkUgKi87XG4gICAgdGhpcy5lbWl0dGVyID0gbmV3IEVtaXR0ZXIoKTtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMgPSBbXTtcbiAgICB0aGlzLmxvZ2dlciA9IG5ldyBMb2dnZXIoc3ltYm9sLmRlc2NyaXB0aW9uKTtcbiAgICB0aGlzLmVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKDApO1xuICAgIHRoaXMubG9nZ2VyLmluZm8oXCJjb25zdHJ1Y3RpbmcgdGhlIGludGVyY2VwdG9yLi4uXCIpO1xuICB9XG4gIC8qKlxuICAgKiBEZXRlcm1pbmUgaWYgdGhpcyBpbnRlcmNlcHRvciBjYW4gYmUgYXBwbGllZFxuICAgKiBpbiB0aGUgY3VycmVudCBlbnZpcm9ubWVudC5cbiAgICovXG4gIGNoZWNrRW52aXJvbm1lbnQoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgLyoqXG4gICAqIEFwcGx5IHRoaXMgaW50ZXJjZXB0b3IgdG8gdGhlIGN1cnJlbnQgcHJvY2Vzcy5cbiAgICogUmV0dXJucyBhbiBhbHJlYWR5IHJ1bm5pbmcgaW50ZXJjZXB0b3IgaW5zdGFuY2UgaWYgaXQncyBwcmVzZW50LlxuICAgKi9cbiAgYXBwbHkoKSB7XG4gICAgY29uc3QgbG9nZ2VyID0gdGhpcy5sb2dnZXIuZXh0ZW5kKFwiYXBwbHlcIik7XG4gICAgbG9nZ2VyLmluZm8oXCJhcHBseWluZyB0aGUgaW50ZXJjZXB0b3IuLi5cIik7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gXCJBUFBMSUVEXCIgLyogQVBQTElFRCAqLykge1xuICAgICAgbG9nZ2VyLmluZm8oXCJpbnRlcmNlcHRlZCBhbHJlYWR5IGFwcGxpZWQhXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBzaG91bGRBcHBseSA9IHRoaXMuY2hlY2tFbnZpcm9ubWVudCgpO1xuICAgIGlmICghc2hvdWxkQXBwbHkpIHtcbiAgICAgIGxvZ2dlci5pbmZvKFwidGhlIGludGVyY2VwdG9yIGNhbm5vdCBiZSBhcHBsaWVkIGluIHRoaXMgZW52aXJvbm1lbnQhXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLnJlYWR5U3RhdGUgPSBcIkFQUExZSU5HXCIgLyogQVBQTFlJTkcgKi87XG4gICAgY29uc3QgcnVubmluZ0luc3RhbmNlID0gdGhpcy5nZXRJbnN0YW5jZSgpO1xuICAgIGlmIChydW5uaW5nSW5zdGFuY2UpIHtcbiAgICAgIGxvZ2dlci5pbmZvKFwiZm91bmQgYSBydW5uaW5nIGluc3RhbmNlLCByZXVzaW5nLi4uXCIpO1xuICAgICAgdGhpcy5vbiA9IChldmVudCwgbGlzdGVuZXIpID0+IHtcbiAgICAgICAgbG9nZ2VyLmluZm8oJ3Byb3h5aW5nIHRoZSBcIiVzXCIgbGlzdGVuZXInLCBldmVudCk7XG4gICAgICAgIHJ1bm5pbmdJbnN0YW5jZS5lbWl0dGVyLmFkZExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKCgpID0+IHtcbiAgICAgICAgICBydW5uaW5nSW5zdGFuY2UuZW1pdHRlci5yZW1vdmVMaXN0ZW5lcihldmVudCwgbGlzdGVuZXIpO1xuICAgICAgICAgIGxvZ2dlci5pbmZvKCdyZW1vdmVkIHByb3hpZWQgXCIlc1wiIGxpc3RlbmVyIScsIGV2ZW50KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfTtcbiAgICAgIHRoaXMucmVhZHlTdGF0ZSA9IFwiQVBQTElFRFwiIC8qIEFQUExJRUQgKi87XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxvZ2dlci5pbmZvKFwibm8gcnVubmluZyBpbnN0YW5jZSBmb3VuZCwgc2V0dGluZyB1cCBhIG5ldyBpbnN0YW5jZS4uLlwiKTtcbiAgICB0aGlzLnNldHVwKCk7XG4gICAgdGhpcy5zZXRJbnN0YW5jZSgpO1xuICAgIHRoaXMucmVhZHlTdGF0ZSA9IFwiQVBQTElFRFwiIC8qIEFQUExJRUQgKi87XG4gIH1cbiAgLyoqXG4gICAqIFNldHVwIHRoZSBtb2R1bGUgYXVnbWVudHMgYW5kIHN0dWJzIG5lY2Vzc2FyeSBmb3IgdGhpcyBpbnRlcmNlcHRvci5cbiAgICogVGhpcyBtZXRob2QgaXMgbm90IHJ1biBpZiB0aGVyZSdzIGEgcnVubmluZyBpbnRlcmNlcHRvciBpbnN0YW5jZVxuICAgKiB0byBwcmV2ZW50IGluc3RhbnRpYXRpbmcgYW4gaW50ZXJjZXB0b3IgbXVsdGlwbGUgdGltZXMuXG4gICAqL1xuICBzZXR1cCgpIHtcbiAgfVxuICAvKipcbiAgICogTGlzdGVuIHRvIHRoZSBpbnRlcmNlcHRvcidzIHB1YmxpYyBldmVudHMuXG4gICAqL1xuICBvbihldmVudCwgbGlzdGVuZXIpIHtcbiAgICBjb25zdCBsb2dnZXIgPSB0aGlzLmxvZ2dlci5leHRlbmQoXCJvblwiKTtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSBcIkRJU1BPU0lOR1wiIC8qIERJU1BPU0lORyAqLyB8fCB0aGlzLnJlYWR5U3RhdGUgPT09IFwiRElTUE9TRURcIiAvKiBESVNQT1NFRCAqLykge1xuICAgICAgbG9nZ2VyLmluZm8oXCJjYW5ub3QgbGlzdGVuIHRvIGV2ZW50cywgYWxyZWFkeSBkaXNwb3NlZCFcIik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgbG9nZ2VyLmluZm8oJ2FkZGluZyBcIiVzXCIgZXZlbnQgbGlzdGVuZXI6JywgZXZlbnQsIGxpc3RlbmVyKTtcbiAgICB0aGlzLmVtaXR0ZXIub24oZXZlbnQsIGxpc3RlbmVyKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBvbmNlKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgIHRoaXMuZW1pdHRlci5vbmNlKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbiAgb2ZmKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgIHRoaXMuZW1pdHRlci5vZmYoZXZlbnQsIGxpc3RlbmVyKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICByZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnQpIHtcbiAgICB0aGlzLmVtaXR0ZXIucmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICAvKipcbiAgICogRGlzcG9zZXMgb2YgYW55IHNpZGUtZWZmZWN0cyB0aGlzIGludGVyY2VwdG9yIGhhcyBpbnRyb2R1Y2VkLlxuICAgKi9cbiAgZGlzcG9zZSgpIHtcbiAgICBjb25zdCBsb2dnZXIgPSB0aGlzLmxvZ2dlci5leHRlbmQoXCJkaXNwb3NlXCIpO1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IFwiRElTUE9TRURcIiAvKiBESVNQT1NFRCAqLykge1xuICAgICAgbG9nZ2VyLmluZm8oXCJjYW5ub3QgZGlzcG9zZSwgYWxyZWFkeSBkaXNwb3NlZCFcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGxvZ2dlci5pbmZvKFwiZGlzcG9zaW5nIHRoZSBpbnRlcmNlcHRvci4uLlwiKTtcbiAgICB0aGlzLnJlYWR5U3RhdGUgPSBcIkRJU1BPU0lOR1wiIC8qIERJU1BPU0lORyAqLztcbiAgICBpZiAoIXRoaXMuZ2V0SW5zdGFuY2UoKSkge1xuICAgICAgbG9nZ2VyLmluZm8oXCJubyBpbnRlcmNlcHRvcnMgcnVubmluZywgc2tpcHBpbmcgZGlzcG9zZS4uLlwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5jbGVhckluc3RhbmNlKCk7XG4gICAgbG9nZ2VyLmluZm8oXCJnbG9iYWwgc3ltYm9sIGRlbGV0ZWQ6XCIsIGdldEdsb2JhbFN5bWJvbCh0aGlzLnN5bWJvbCkpO1xuICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgbG9nZ2VyLmluZm8oXCJkaXNwb3Npbmcgb2YgJWQgc3Vic2NyaXB0aW9ucy4uLlwiLCB0aGlzLnN1YnNjcmlwdGlvbnMubGVuZ3RoKTtcbiAgICAgIGZvciAoY29uc3QgZGlzcG9zZSBvZiB0aGlzLnN1YnNjcmlwdGlvbnMpIHtcbiAgICAgICAgZGlzcG9zZSgpO1xuICAgICAgfVxuICAgICAgdGhpcy5zdWJzY3JpcHRpb25zID0gW107XG4gICAgICBsb2dnZXIuaW5mbyhcImRpc3Bvc2VkIG9mIGFsbCBzdWJzY3JpcHRpb25zIVwiLCB0aGlzLnN1YnNjcmlwdGlvbnMubGVuZ3RoKTtcbiAgICB9XG4gICAgdGhpcy5lbWl0dGVyLnJlbW92ZUFsbExpc3RlbmVycygpO1xuICAgIGxvZ2dlci5pbmZvKFwiZGVzdHJveWVkIHRoZSBsaXN0ZW5lciFcIik7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gXCJESVNQT1NFRFwiIC8qIERJU1BPU0VEICovO1xuICB9XG4gIGdldEluc3RhbmNlKCkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBpbnN0YW5jZSA9IGdldEdsb2JhbFN5bWJvbCh0aGlzLnN5bWJvbCk7XG4gICAgdGhpcy5sb2dnZXIuaW5mbyhcInJldHJpZXZlZCBnbG9iYWwgaW5zdGFuY2U6XCIsIChfYSA9IGluc3RhbmNlID09IG51bGwgPyB2b2lkIDAgOiBpbnN0YW5jZS5jb25zdHJ1Y3RvcikgPT0gbnVsbCA/IHZvaWQgMCA6IF9hLm5hbWUpO1xuICAgIHJldHVybiBpbnN0YW5jZTtcbiAgfVxuICBzZXRJbnN0YW5jZSgpIHtcbiAgICBzZXRHbG9iYWxTeW1ib2wodGhpcy5zeW1ib2wsIHRoaXMpO1xuICAgIHRoaXMubG9nZ2VyLmluZm8oXCJzZXQgZ2xvYmFsIGluc3RhbmNlIVwiLCB0aGlzLnN5bWJvbC5kZXNjcmlwdGlvbik7XG4gIH1cbiAgY2xlYXJJbnN0YW5jZSgpIHtcbiAgICBkZWxldGVHbG9iYWxTeW1ib2wodGhpcy5zeW1ib2wpO1xuICAgIHRoaXMubG9nZ2VyLmluZm8oXCJjbGVhcmVkIGdsb2JhbCBpbnN0YW5jZSFcIiwgdGhpcy5zeW1ib2wuZGVzY3JpcHRpb24pO1xuICB9XG59O1xuXG4vLyBzcmMvY3JlYXRlUmVxdWVzdElkLnRzXG5mdW5jdGlvbiBjcmVhdGVSZXF1ZXN0SWQoKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zbGljZSgyKTtcbn1cblxuLy8gc3JjL3V0aWxzL2NhblBhcnNlVXJsLnRzXG5mdW5jdGlvbiBjYW5QYXJzZVVybCh1cmwpIHtcbiAgdHJ5IHtcbiAgICBuZXcgVVJMKHVybCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKF9lcnJvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG4vLyBzcmMvdXRpbHMvZ2V0VmFsdWVCeVN5bWJvbC50c1xuZnVuY3Rpb24gZ2V0VmFsdWVCeVN5bWJvbChzeW1ib2xOYW1lLCBzb3VyY2UpIHtcbiAgY29uc3Qgb3duU3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKTtcbiAgY29uc3Qgc3ltYm9sID0gb3duU3ltYm9scy5maW5kKChzeW1ib2wyKSA9PiB7XG4gICAgcmV0dXJuIHN5bWJvbDIuZGVzY3JpcHRpb24gPT09IHN5bWJvbE5hbWU7XG4gIH0pO1xuICBpZiAoc3ltYm9sKSB7XG4gICAgcmV0dXJuIFJlZmxlY3QuZ2V0KHNvdXJjZSwgc3ltYm9sKTtcbiAgfVxuICByZXR1cm47XG59XG5cbi8vIHNyYy91dGlscy9mZXRjaFV0aWxzLnRzXG52YXIgX0ZldGNoUmVzcG9uc2UgPSBjbGFzcyBleHRlbmRzIFJlc3BvbnNlIHtcbiAgc3RhdGljIGlzQ29uZmlndXJhYmxlU3RhdHVzQ29kZShzdGF0dXMpIHtcbiAgICByZXR1cm4gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPD0gNTk5O1xuICB9XG4gIHN0YXRpYyBpc1JlZGlyZWN0UmVzcG9uc2Uoc3RhdHVzKSB7XG4gICAgcmV0dXJuIF9GZXRjaFJlc3BvbnNlLlNUQVRVU19DT0RFU19XSVRIX1JFRElSRUNULmluY2x1ZGVzKHN0YXR1cyk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybnMgYSBib29sZWFuIGluZGljYXRpbmcgd2hldGhlciB0aGUgZ2l2ZW4gcmVzcG9uc2Ugc3RhdHVzXG4gICAqIGNvZGUgcmVwcmVzZW50cyBhIHJlc3BvbnNlIHRoYXQgY2FuIGhhdmUgYSBib2R5LlxuICAgKi9cbiAgc3RhdGljIGlzUmVzcG9uc2VXaXRoQm9keShzdGF0dXMpIHtcbiAgICByZXR1cm4gIV9GZXRjaFJlc3BvbnNlLlNUQVRVU19DT0RFU19XSVRIT1VUX0JPRFkuaW5jbHVkZXMoc3RhdHVzKTtcbiAgfVxuICBzdGF0aWMgc2V0VXJsKHVybCwgcmVzcG9uc2UpIHtcbiAgICBpZiAoIXVybCB8fCB1cmwgPT09IFwiYWJvdXQ6XCIgfHwgIWNhblBhcnNlVXJsKHVybCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgc3RhdGUgPSBnZXRWYWx1ZUJ5U3ltYm9sKFwic3RhdGVcIiwgcmVzcG9uc2UpO1xuICAgIGlmIChzdGF0ZSkge1xuICAgICAgc3RhdGUudXJsTGlzdC5wdXNoKG5ldyBVUkwodXJsKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXNwb25zZSwgXCJ1cmxcIiwge1xuICAgICAgICB2YWx1ZTogdXJsLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIHdyaXRhYmxlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBQYXJzZXMgdGhlIGdpdmVuIHJhdyBIVFRQIGhlYWRlcnMgaW50byBhIEZldGNoIEFQSSBgSGVhZGVyc2AgaW5zdGFuY2UuXG4gICAqL1xuICBzdGF0aWMgcGFyc2VSYXdIZWFkZXJzKHJhd0hlYWRlcnMpIHtcbiAgICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKTtcbiAgICBmb3IgKGxldCBsaW5lID0gMDsgbGluZSA8IHJhd0hlYWRlcnMubGVuZ3RoOyBsaW5lICs9IDIpIHtcbiAgICAgIGhlYWRlcnMuYXBwZW5kKHJhd0hlYWRlcnNbbGluZV0sIHJhd0hlYWRlcnNbbGluZSArIDFdKTtcbiAgICB9XG4gICAgcmV0dXJuIGhlYWRlcnM7XG4gIH1cbiAgY29uc3RydWN0b3IoYm9keSwgaW5pdCA9IHt9KSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHN0YXR1cyA9IChfYSA9IGluaXQuc3RhdHVzKSAhPSBudWxsID8gX2EgOiAyMDA7XG4gICAgY29uc3Qgc2FmZVN0YXR1cyA9IF9GZXRjaFJlc3BvbnNlLmlzQ29uZmlndXJhYmxlU3RhdHVzQ29kZShzdGF0dXMpID8gc3RhdHVzIDogMjAwO1xuICAgIGNvbnN0IGZpbmFsQm9keSA9IF9GZXRjaFJlc3BvbnNlLmlzUmVzcG9uc2VXaXRoQm9keShzdGF0dXMpID8gYm9keSA6IG51bGw7XG4gICAgc3VwZXIoZmluYWxCb2R5LCB7XG4gICAgICBzdGF0dXM6IHNhZmVTdGF0dXMsXG4gICAgICBzdGF0dXNUZXh0OiBpbml0LnN0YXR1c1RleHQsXG4gICAgICBoZWFkZXJzOiBpbml0LmhlYWRlcnNcbiAgICB9KTtcbiAgICBpZiAoc3RhdHVzICE9PSBzYWZlU3RhdHVzKSB7XG4gICAgICBjb25zdCBzdGF0ZSA9IGdldFZhbHVlQnlTeW1ib2woXCJzdGF0ZVwiLCB0aGlzKTtcbiAgICAgIGlmIChzdGF0ZSkge1xuICAgICAgICBzdGF0ZS5zdGF0dXMgPSBzdGF0dXM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzdGF0dXNcIiwge1xuICAgICAgICAgIHZhbHVlOiBzdGF0dXMsXG4gICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgd3JpdGFibGU6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBfRmV0Y2hSZXNwb25zZS5zZXRVcmwoaW5pdC51cmwsIHRoaXMpO1xuICB9XG59O1xudmFyIEZldGNoUmVzcG9uc2UgPSBfRmV0Y2hSZXNwb25zZTtcbi8qKlxuICogUmVzcG9uc2Ugc3RhdHVzIGNvZGVzIGZvciByZXNwb25zZXMgdGhhdCBjYW5ub3QgaGF2ZSBib2R5LlxuICogQHNlZSBodHRwczovL2ZldGNoLnNwZWMud2hhdHdnLm9yZy8jc3RhdHVzZXNcbiAqL1xuRmV0Y2hSZXNwb25zZS5TVEFUVVNfQ09ERVNfV0lUSE9VVF9CT0RZID0gWzEwMSwgMTAzLCAyMDQsIDIwNSwgMzA0XTtcbkZldGNoUmVzcG9uc2UuU1RBVFVTX0NPREVTX1dJVEhfUkVESVJFQ1QgPSBbMzAxLCAzMDIsIDMwMywgMzA3LCAzMDhdO1xuXG5leHBvcnQge1xuICBJTlRFUk5BTF9SRVFVRVNUX0lEX0hFQURFUl9OQU1FLFxuICBnZXRHbG9iYWxTeW1ib2wsXG4gIGRlbGV0ZUdsb2JhbFN5bWJvbCxcbiAgSW50ZXJjZXB0b3JSZWFkeVN0YXRlLFxuICBJbnRlcmNlcHRvcixcbiAgY3JlYXRlUmVxdWVzdElkLFxuICBjYW5QYXJzZVVybCxcbiAgRmV0Y2hSZXNwb25zZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNodW5rLUlISlNQTVlNLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-IHJSPMYM.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-RC2XPCC4.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/node/chunk-RC2XPCC4.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchInterceptor: () => (/* binding */ BatchInterceptor)\n/* harmony export */ });\n/* harmony import */ var _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-IHJSPMYM.mjs */ \"(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-IHJSPMYM.mjs\");\n\n\n// src/BatchInterceptor.ts\nvar BatchInterceptor = class extends _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_0__.Interceptor {\n  constructor(options) {\n    BatchInterceptor.symbol = Symbol(options.name);\n    super(BatchInterceptor.symbol);\n    this.interceptors = options.interceptors;\n  }\n  setup() {\n    const logger = this.logger.extend(\"setup\");\n    logger.info(\"applying all %d interceptors...\", this.interceptors.length);\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name);\n      interceptor.apply();\n      logger.info(\"adding interceptor dispose subscription\");\n      this.subscriptions.push(() => interceptor.dispose());\n    }\n  }\n  on(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener);\n    }\n    return this;\n  }\n  once(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener);\n    }\n    return this;\n  }\n  off(event, listener) {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener);\n    }\n    return this;\n  }\n  removeAllListeners(event) {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event);\n    }\n    return this;\n  }\n};\n\n\n//# sourceMappingURL=chunk-RC2XPCC4.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvbm9kZS9jaHVuay1SQzJYUENDNC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFOEI7O0FBRTlCO0FBQ0EscUNBQXFDLDREQUFXO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9uaWtvbGFzL25pay9pcXVwL25vZGVfbW9kdWxlcy9AbXN3anMvaW50ZXJjZXB0b3JzL2xpYi9ub2RlL2NodW5rLVJDMlhQQ0M0Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBJbnRlcmNlcHRvclxufSBmcm9tIFwiLi9jaHVuay1JSEpTUE1ZTS5tanNcIjtcblxuLy8gc3JjL0JhdGNoSW50ZXJjZXB0b3IudHNcbnZhciBCYXRjaEludGVyY2VwdG9yID0gY2xhc3MgZXh0ZW5kcyBJbnRlcmNlcHRvciB7XG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcbiAgICBCYXRjaEludGVyY2VwdG9yLnN5bWJvbCA9IFN5bWJvbChvcHRpb25zLm5hbWUpO1xuICAgIHN1cGVyKEJhdGNoSW50ZXJjZXB0b3Iuc3ltYm9sKTtcbiAgICB0aGlzLmludGVyY2VwdG9ycyA9IG9wdGlvbnMuaW50ZXJjZXB0b3JzO1xuICB9XG4gIHNldHVwKCkge1xuICAgIGNvbnN0IGxvZ2dlciA9IHRoaXMubG9nZ2VyLmV4dGVuZChcInNldHVwXCIpO1xuICAgIGxvZ2dlci5pbmZvKFwiYXBwbHlpbmcgYWxsICVkIGludGVyY2VwdG9ycy4uLlwiLCB0aGlzLmludGVyY2VwdG9ycy5sZW5ndGgpO1xuICAgIGZvciAoY29uc3QgaW50ZXJjZXB0b3Igb2YgdGhpcy5pbnRlcmNlcHRvcnMpIHtcbiAgICAgIGxvZ2dlci5pbmZvKCdhcHBseWluZyBcIiVzXCIgaW50ZXJjZXB0b3IuLi4nLCBpbnRlcmNlcHRvci5jb25zdHJ1Y3Rvci5uYW1lKTtcbiAgICAgIGludGVyY2VwdG9yLmFwcGx5KCk7XG4gICAgICBsb2dnZXIuaW5mbyhcImFkZGluZyBpbnRlcmNlcHRvciBkaXNwb3NlIHN1YnNjcmlwdGlvblwiKTtcbiAgICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5wdXNoKCgpID0+IGludGVyY2VwdG9yLmRpc3Bvc2UoKSk7XG4gICAgfVxuICB9XG4gIG9uKGV2ZW50LCBsaXN0ZW5lcikge1xuICAgIGZvciAoY29uc3QgaW50ZXJjZXB0b3Igb2YgdGhpcy5pbnRlcmNlcHRvcnMpIHtcbiAgICAgIGludGVyY2VwdG9yLm9uKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIG9uY2UoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvciBvZiB0aGlzLmludGVyY2VwdG9ycykge1xuICAgICAgaW50ZXJjZXB0b3Iub25jZShldmVudCwgbGlzdGVuZXIpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuICBvZmYoZXZlbnQsIGxpc3RlbmVyKSB7XG4gICAgZm9yIChjb25zdCBpbnRlcmNlcHRvciBvZiB0aGlzLmludGVyY2VwdG9ycykge1xuICAgICAgaW50ZXJjZXB0b3Iub2ZmKGV2ZW50LCBsaXN0ZW5lcik7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIHJlbW92ZUFsbExpc3RlbmVycyhldmVudCkge1xuICAgIGZvciAoY29uc3QgaW50ZXJjZXB0b3JzIG9mIHRoaXMuaW50ZXJjZXB0b3JzKSB7XG4gICAgICBpbnRlcmNlcHRvcnMucmVtb3ZlQWxsTGlzdGVuZXJzKGV2ZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn07XG5cbmV4cG9ydCB7XG4gIEJhdGNoSW50ZXJjZXB0b3Jcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jaHVuay1SQzJYUENDNC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-RC2XPCC4.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@mswjs/interceptors/lib/node/index.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@mswjs/interceptors/lib/node/index.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchInterceptor: () => (/* reexport safe */ _chunk_RC2XPCC4_mjs__WEBPACK_IMPORTED_MODULE_0__.BatchInterceptor),\n/* harmony export */   FetchResponse: () => (/* reexport safe */ _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_3__.FetchResponse),\n/* harmony export */   INTERNAL_REQUEST_ID_HEADER_NAME: () => (/* reexport safe */ _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_3__.INTERNAL_REQUEST_ID_HEADER_NAME),\n/* harmony export */   IS_PATCHED_MODULE: () => (/* reexport safe */ _chunk_6YM4PLBI_mjs__WEBPACK_IMPORTED_MODULE_2__.IS_PATCHED_MODULE),\n/* harmony export */   Interceptor: () => (/* reexport safe */ _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_3__.Interceptor),\n/* harmony export */   InterceptorReadyState: () => (/* reexport safe */ _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_3__.InterceptorReadyState),\n/* harmony export */   createRequestId: () => (/* reexport safe */ _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_3__.createRequestId),\n/* harmony export */   decodeBuffer: () => (/* reexport safe */ _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeBuffer),\n/* harmony export */   deleteGlobalSymbol: () => (/* reexport safe */ _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_3__.deleteGlobalSymbol),\n/* harmony export */   encodeBuffer: () => (/* reexport safe */ _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeBuffer),\n/* harmony export */   getCleanUrl: () => (/* binding */ getCleanUrl),\n/* harmony export */   getGlobalSymbol: () => (/* reexport safe */ _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_3__.getGlobalSymbol),\n/* harmony export */   getRawRequest: () => (/* reexport safe */ _chunk_3GJB4JDF_mjs__WEBPACK_IMPORTED_MODULE_4__.getRawRequest)\n/* harmony export */ });\n/* harmony import */ var _chunk_RC2XPCC4_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-RC2XPCC4.mjs */ \"(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-RC2XPCC4.mjs\");\n/* harmony import */ var _chunk_6HYIRFX2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-6HYIRFX2.mjs */ \"(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-6HYIRFX2.mjs\");\n/* harmony import */ var _chunk_6YM4PLBI_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-6YM4PLBI.mjs */ \"(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-6YM4PLBI.mjs\");\n/* harmony import */ var _chunk_IHJSPMYM_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-IHJSPMYM.mjs */ \"(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-IHJSPMYM.mjs\");\n/* harmony import */ var _chunk_3GJB4JDF_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chunk-3GJB4JDF.mjs */ \"(ssr)/./node_modules/@mswjs/interceptors/lib/node/chunk-3GJB4JDF.mjs\");\n\n\n\n\n\n\n// src/utils/getCleanUrl.ts\nfunction getCleanUrl(url, isAbsolute = true) {\n  return [isAbsolute && url.origin, url.pathname].filter(Boolean).join(\"\");\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG1zd2pzL2ludGVyY2VwdG9ycy9saWIvbm9kZS9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRThCO0FBSUE7QUFHQTtBQVNBO0FBR0E7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBZUU7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL25pa29sYXMvbmlrL2lxdXAvbm9kZV9tb2R1bGVzL0Btc3dqcy9pbnRlcmNlcHRvcnMvbGliL25vZGUvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEJhdGNoSW50ZXJjZXB0b3Jcbn0gZnJvbSBcIi4vY2h1bmstUkMyWFBDQzQubWpzXCI7XG5pbXBvcnQge1xuICBkZWNvZGVCdWZmZXIsXG4gIGVuY29kZUJ1ZmZlclxufSBmcm9tIFwiLi9jaHVuay02SFlJUkZYMi5tanNcIjtcbmltcG9ydCB7XG4gIElTX1BBVENIRURfTU9EVUxFXG59IGZyb20gXCIuL2NodW5rLTZZTTRQTEJJLm1qc1wiO1xuaW1wb3J0IHtcbiAgRmV0Y2hSZXNwb25zZSxcbiAgSU5URVJOQUxfUkVRVUVTVF9JRF9IRUFERVJfTkFNRSxcbiAgSW50ZXJjZXB0b3IsXG4gIEludGVyY2VwdG9yUmVhZHlTdGF0ZSxcbiAgY3JlYXRlUmVxdWVzdElkLFxuICBkZWxldGVHbG9iYWxTeW1ib2wsXG4gIGdldEdsb2JhbFN5bWJvbFxufSBmcm9tIFwiLi9jaHVuay1JSEpTUE1ZTS5tanNcIjtcbmltcG9ydCB7XG4gIGdldFJhd1JlcXVlc3Rcbn0gZnJvbSBcIi4vY2h1bmstM0dKQjRKREYubWpzXCI7XG5cbi8vIHNyYy91dGlscy9nZXRDbGVhblVybC50c1xuZnVuY3Rpb24gZ2V0Q2xlYW5VcmwodXJsLCBpc0Fic29sdXRlID0gdHJ1ZSkge1xuICByZXR1cm4gW2lzQWJzb2x1dGUgJiYgdXJsLm9yaWdpbiwgdXJsLnBhdGhuYW1lXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIlwiKTtcbn1cbmV4cG9ydCB7XG4gIEJhdGNoSW50ZXJjZXB0b3IsXG4gIEZldGNoUmVzcG9uc2UsXG4gIElOVEVSTkFMX1JFUVVFU1RfSURfSEVBREVSX05BTUUsXG4gIElTX1BBVENIRURfTU9EVUxFLFxuICBJbnRlcmNlcHRvcixcbiAgSW50ZXJjZXB0b3JSZWFkeVN0YXRlLFxuICBjcmVhdGVSZXF1ZXN0SWQsXG4gIGRlY29kZUJ1ZmZlcixcbiAgZGVsZXRlR2xvYmFsU3ltYm9sLFxuICBlbmNvZGVCdWZmZXIsXG4gIGdldENsZWFuVXJsLFxuICBnZXRHbG9iYWxTeW1ib2wsXG4gIGdldFJhd1JlcXVlc3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@mswjs/interceptors/lib/node/index.mjs\n");

/***/ })

};
;